-- MySQL Script generated by MySQL Workbench
-- Wed Dec 28 14:27:30 2016
-- Model: New Model    Version: 1.0
SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema evergreendb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `evergreendb` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `evergreendb` ;

-- -----------------------------------------------------
-- Table `evergreendb`.`suppliers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `evergreendb`.`suppliers` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `company` VARCHAR(45) NULL,
  `first_name` VARCHAR(45) NULL,
  `last_name` VARCHAR(45) NULL,
  `address` VARCHAR(45) NULL,
  `email` VARCHAR(45) NULL,
  `password` VARCHAR(255) NULL,
  `mftrg_process` VARCHAR(45) NULL,
  `profilepic` VARCHAR(45) NULL,
  `linkedin_url` VARCHAR(45) NULL,
  `homepage_url` VARCHAR(45) NULL,
  `facebook_url` VARCHAR(45) NULL,
  `twitter_url` VARCHAR(45) NULL,
  `instagram_url` VARCHAR(45) NULL,
  `created_at` DATETIME NULL,
  `updated_at` DATETIME NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `evergreendb`.`makers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `evergreendb`.`makers` (
  `id` INT NOT NULL,
  `company` VARCHAR(45) NULL,
  `first_name` VARCHAR(45) NULL,
  `last_name` VARCHAR(45) NULL,
  `profilepic` VARCHAR(45) NULL,
  `address` VARCHAR(45) NULL,
  `email` VARCHAR(45) NULL,
  `homepage_url` VARCHAR(45) NULL,
  `facebook_url` VARCHAR(45) NULL,
  `linkedin_url` VARCHAR(45) NULL,
  `twitter_url` VARCHAR(45) NULL,
  `instagram_url` VARCHAR(45) NULL,
  `password` VARCHAR(255) NULL,
  `created_at` DATETIME NULL,
  `updated_at` DATETIME NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `evergreendb`.`processes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `evergreendb`.`processes` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `process` VARCHAR(45) NULL,
  `created_at` VARCHAR(45) NULL,
  `updated_at` VARCHAR(45) NULL,
  `proposals_id` INT NOT NULL,
  PRIMARY KEY (`id`, `proposals_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `evergreendb`.`addresses`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `evergreendb`.`addresses` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `street_name` VARCHAR(45) NULL,
  `street_name2` VARCHAR(45) NULL,
  `city` VARCHAR(45) NULL,
  `zip` VARCHAR(45) NULL,
  `country` VARCHAR(45) NULL,
  `continent` VARCHAR(45) NULL,
  `supplier_id` INT NOT NULL,
  `maker_id` INT NOT NULL,
  `created_at` VARCHAR(45) NULL,
  `updated_at` VARCHAR(45) NULL,
  PRIMARY KEY (`id`, `supplier_id`, `maker_id`),
  INDEX `fk_Address_supplier_idx` (`supplier_id` ASC),
  INDEX `fk_Address_maker1_idx` (`maker_id` ASC),
  CONSTRAINT `fk_Address_supplier`
    FOREIGN KEY (`supplier_id`)
    REFERENCES `evergreendb`.`suppliers` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Address_maker1`
    FOREIGN KEY (`maker_id`)
    REFERENCES `evergreendb`.`makers` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `evergreendb`.`creditcards`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `evergreendb`.`creditcards` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `cc_firstname` VARCHAR(45) NULL,
  `cc_lastname` VARCHAR(45) NULL,
  `billing_address` VARCHAR(45) NULL,
  `number` INT NULL,
  `ccv` INT NULL,
  `expiration` DATETIME NULL,
  `maker_id` INT NOT NULL,
  `supplier_id` INT NOT NULL,
  `created_at` VARCHAR(45) NULL,
  `updated_at` VARCHAR(45) NULL,
  PRIMARY KEY (`id`, `supplier_id`, `maker_id`),
  INDEX `fk_creditcards_maker1_idx` (`maker_id` ASC),
  INDEX `fk_creditcards_supplier1_idx` (`supplier_id` ASC),
  CONSTRAINT `fk_creditcards_maker1`
    FOREIGN KEY (`maker_id`)
    REFERENCES `evergreendb`.`makers` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_creditcards_supplier1`
    FOREIGN KEY (`supplier_id`)
    REFERENCES `evergreendb`.`suppliers` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `evergreendb`.`proposals`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `evergreendb`.`proposals` (
  `id` INT NOT NULL,
  `item` VARCHAR(45) NULL,
  `quantity` VARCHAR(45) NULL,
  `description` VARCHAR(45) NULL,
  `completion` DATETIME NULL,
  `shipping_address` VARCHAR(45) NULL,
  `attachment` VARCHAR(45) NULL,
  `nda` VARCHAR(45) NULL,
  `maker_id` INT NOT NULL,
  `created_at` DATETIME NULL,
  `updated_at` DATETIME NULL,
  PRIMARY KEY (`id`, `maker_id`),
  INDEX `fk_proposals_maker1_idx` (`maker_id` ASC),
  CONSTRAINT `fk_proposals_maker1`
    FOREIGN KEY (`maker_id`)
    REFERENCES `evergreendb`.`makers` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `evergreendb`.`processes_has_suppliers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `evergreendb`.`processes_has_suppliers` (
  `processes_id` INT NOT NULL,
  `supplier_id` INT NOT NULL,
  PRIMARY KEY (`processes_id`, `supplier_id`),
  INDEX `fk_processes_has_supplier_supplier1_idx` (`supplier_id` ASC),
  INDEX `fk_processes_has_supplier_processes1_idx` (`processes_id` ASC),
  CONSTRAINT `fk_processes_has_supplier_processes1`
    FOREIGN KEY (`processes_id`)
    REFERENCES `evergreendb`.`processes` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_processes_has_supplier_supplier1`
    FOREIGN KEY (`supplier_id`)
    REFERENCES `evergreendb`.`suppliers` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `evergreendb`.`offers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `evergreendb`.`offers` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `sga` VARCHAR(45) NULL,
  `profit` VARCHAR(45) NULL,
  `overhead` VARCHAR(45) NULL,
  `totalcost` VARCHAR(45) NULL,
  `proposals_id` INT NOT NULL,
  `supplier_id` INT NOT NULL,
  `supplier_supplier_subscription_id` INT NOT NULL,
  `servicefee` INT NULL,
  `created_at` DATETIME NULL,
  `updated_at` DATETIME NULL,
  PRIMARY KEY (`id`, `proposals_id`, `supplier_id`, `supplier_supplier_subscription_id`),
  INDEX `fk_offer_proposals1_idx` (`proposals_id` ASC),
  INDEX `fk_offer_supplier1_idx` (`supplier_id` ASC, `supplier_supplier_subscription_id` ASC),
  CONSTRAINT `fk_offer_proposals1`
    FOREIGN KEY (`proposals_id`)
    REFERENCES `evergreendb`.`proposals` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_offer_supplier1`
    FOREIGN KEY (`supplier_id`)
    REFERENCES `evergreendb`.`suppliers` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `evergreendb`.`daily_prod_reports`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `evergreendb`.`daily_prod_reports` (
  `id` INT NOT NULL,
  `input` VARCHAR(45) NULL,
  `output` VARCHAR(45) NULL,
  `shipping` VARCHAR(45) NULL,
  `note` VARCHAR(255) NULL,
  `created_at` VARCHAR(45) NULL,
  `updated_at` VARCHAR(45) NULL,
  `supplier_id` INT NOT NULL,
  PRIMARY KEY (`id`, `supplier_id`),
  INDEX `fk_daily_prod_supplier1_idx` (`supplier_id` ASC),
  CONSTRAINT `fk_daily_prod_supplier1`
    FOREIGN KEY (`supplier_id`)
    REFERENCES `evergreendb`.`suppliers` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `evergreendb`.`raw_materials`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `evergreendb`.`raw_materials` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  `cost` VARCHAR(45) NULL,
  `unit_cost` VARCHAR(45) NULL,
  `created_at` VARCHAR(45) NULL,
  `updated_at` VARCHAR(45) NULL,
  `offer_id` INT NOT NULL,
  PRIMARY KEY (`id`, `offer_id`),
  INDEX `fk_raw_material_offer1_idx` (`offer_id` ASC),
  CONSTRAINT `fk_raw_material_offer1`
    FOREIGN KEY (`offer_id`)
    REFERENCES `evergreendb`.`offers` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `evergreendb`.`machine_labor_rates`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `evergreendb`.`machine_labor_rates` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `offer_id` INT NOT NULL,
  `name` VARCHAR(45) NULL,
  `cycle_time` VARCHAR(45) NULL,
  `yield` VARCHAR(45) NULL,
  `machine_laborrate` VARCHAR(45) NULL,
  `laborer` VARCHAR(45) NULL,
  `created_at` VARCHAR(45) NULL,
  `updated_at` VARCHAR(45) NULL,
  PRIMARY KEY (`id`, `offer_id`),
  INDEX `fk_machine_labor_offer1_idx` (`offer_id` ASC),
  CONSTRAINT `fk_machine_labor_offer1`
    FOREIGN KEY (`offer_id`)
    REFERENCES `evergreendb`.`offers` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `evergreendb`.`daily_prod_has_raw_materials`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `evergreendb`.`daily_prod_has_raw_materials` (
  `daily_prod_id` INT NOT NULL,
  `raw_material_id` INT NOT NULL,
  PRIMARY KEY (`daily_prod_id`, `raw_material_id`),
  INDEX `fk_daily_prod_has_raw_material_raw_material1_idx` (`raw_material_id` ASC),
  INDEX `fk_daily_prod_has_raw_material_daily_prod1_idx` (`daily_prod_id` ASC),
  CONSTRAINT `fk_daily_prod_has_raw_material_daily_prod1`
    FOREIGN KEY (`daily_prod_id`)
    REFERENCES `evergreendb`.`daily_prod_reports` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_daily_prod_has_raw_material_raw_material1`
    FOREIGN KEY (`raw_material_id`)
    REFERENCES `evergreendb`.`raw_materials` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `evergreendb`.`processes_has_proposals`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `evergreendb`.`processes_has_proposals` (
  `processes_id` INT NOT NULL,
  `processes_proposals_id` INT NOT NULL,
  `proposals_id` INT NOT NULL,
  `proposals_maker_id` INT NOT NULL,
  PRIMARY KEY (`processes_id`, `processes_proposals_id`, `proposals_id`, `proposals_maker_id`),
  INDEX `fk_processes_has_proposals_proposals1_idx` (`proposals_id` ASC, `proposals_maker_id` ASC),
  INDEX `fk_processes_has_proposals_processes1_idx` (`processes_id` ASC, `processes_proposals_id` ASC),
  CONSTRAINT `fk_processes_has_proposals_processes1`
    FOREIGN KEY (`processes_id` , `processes_proposals_id`)
    REFERENCES `evergreendb`.`processes` (`id` , `proposals_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_processes_has_proposals_proposals1`
    FOREIGN KEY (`proposals_id` , `proposals_maker_id`)
    REFERENCES `evergreendb`.`proposals` (`id` , `maker_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `evergreendb`.`bankaccounts`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `evergreendb`.`bankaccounts` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `account` INT NULL,
  `routing` INT NULL,
  `maker_id` INT NOT NULL,
  `supplier_id` INT NOT NULL,
  PRIMARY KEY (`id`, `maker_id`, `supplier_id`),
  INDEX `fk_bankaccount_maker1_idx` (`maker_id` ASC),
  INDEX `fk_bankaccount_supplier1_idx` (`supplier_id` ASC),
  CONSTRAINT `fk_bankaccount_maker1`
    FOREIGN KEY (`maker_id`)
    REFERENCES `evergreendb`.`makers` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_bankaccount_supplier1`
    FOREIGN KEY (`supplier_id`)
    REFERENCES `evergreendb`.`suppliers` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `evergreendb`.`messages`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `evergreendb`.`messages` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `message_supplier` VARCHAR(45) NULL,
  `pdf_attach_s` VARCHAR(45) NULL,
  `jpg_attach_m` VARCHAR(45) NULL,
  `message_maker` VARCHAR(45) NULL,
  `pdf_attach_m` VARCHAR(45) NULL,
  `jpg_attach_s` VARCHAR(45) NULL,
  `created_at` DATETIME NULL,
  `updated_at` DATETIME NULL,
  `supplier_id` INT NOT NULL,
  `maker_id` INT NOT NULL,
  `proposals_id` INT NOT NULL,
  PRIMARY KEY (`id`, `supplier_id`, `maker_id`, `proposals_id`),
  INDEX `fk_message_supplier1_idx` (`supplier_id` ASC),
  INDEX `fk_message_maker1_idx` (`maker_id` ASC),
  INDEX `fk_message_proposals1_idx` (`proposals_id` ASC),
  CONSTRAINT `fk_message_supplier1`
    FOREIGN KEY (`supplier_id`)
    REFERENCES `evergreendb`.`suppliers` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_message_maker1`
    FOREIGN KEY (`maker_id`)
    REFERENCES `evergreendb`.`makers` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_message_proposals1`
    FOREIGN KEY (`proposals_id`)
    REFERENCES `evergreendb`.`proposals` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
